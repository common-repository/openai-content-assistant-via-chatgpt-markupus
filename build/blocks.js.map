{"version":3,"file":"blocks.js","mappings":"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","sources":["webpack://wp-chat-gpt-plugin/./blocks/open-ai-sidebar/CGPTMS_OpenAISidebar.js","webpack://wp-chat-gpt-plugin/./blocks/open-ai-sidebar/components/HistroyList.js","webpack://wp-chat-gpt-plugin/./blocks/open-ai-sidebar/components/List.js","webpack://wp-chat-gpt-plugin/./blocks/open-ai-sidebar/utils/index.js","webpack://wp-chat-gpt-plugin/external window \"React\"","webpack://wp-chat-gpt-plugin/external window [\"wp\",\"apiFetch\"]","webpack://wp-chat-gpt-plugin/external window [\"wp\",\"components\"]","webpack://wp-chat-gpt-plugin/external window [\"wp\",\"data\"]","webpack://wp-chat-gpt-plugin/external window [\"wp\",\"editPost\"]","webpack://wp-chat-gpt-plugin/external window [\"wp\",\"element\"]","webpack://wp-chat-gpt-plugin/external window [\"wp\",\"url\"]","webpack://wp-chat-gpt-plugin/webpack/bootstrap","webpack://wp-chat-gpt-plugin/webpack/runtime/compat get default export","webpack://wp-chat-gpt-plugin/webpack/runtime/define property getters","webpack://wp-chat-gpt-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://wp-chat-gpt-plugin/webpack/runtime/make namespace object","webpack://wp-chat-gpt-plugin/./blocks/open-ai-sidebar/index.js"],"sourcesContent":["import {createContext} from 'react';\nimport { useState, useEffect } from '@wordpress/element'\nimport {Notice, Button, Modal, Spinner, TabPanel} from '@wordpress/components';\nimport { select, dispatch} from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '@wordpress/api-fetch';\nimport { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/edit-post';\nimport List from \"./components/List\";\nimport fetchRequest from \"./utils\";\nimport HistoryList from \"./components/HistroyList\";\n\nconst CGPTMS_OpenAISidebar = () => {\n    const [ isOpen, setOpen ] = useState( false );\n    const [ notice, setNotice ] = useState( {message:''} );\n    const [ posts, setPosts ] = useState( [] );\n    const [ excerpts, setExcerpts ] = useState( [] );\n    const [ isLoader, setLoader ] = useState( false );\n    const [ modalHeader, setModalHeader ] = useState( '' );\n    const [ errors, setErrors ] = useState( '' );\n    const [selectedTab, setSelectedTab] = useState('request');\n\n    const closeModal = () => {\n        setErrors('');\n        setNotice({});\n        setOpen( false );\n    };\n\n\n    const dispatchTitle = (title) => {\n        if (title) {\n            const postId = select('core/editor').getCurrentPostId();\n            dispatch('core/editor').editPost({title: title, id: postId})\n            setNotice({message: 'Title updated', status:'success'});\n            const titleBlock = select('core/block-editor').getBlocks().find(block => block.name === 'core/post-title');\n            if (titleBlock) {\n                // Update the title attribute\n                dispatch('core/block-editor').updateBlockAttributes(titleBlock.clientId, {title: title});\n                dispatch('core/editor').editPost({title: title});\n                console.log('Title updated', title);\n            } else {\n                console.log('No title block found.');\n            }\n        } else {\n            setNotice({message: 'Title is empty or null.'});\n            console.log('Title is empty or null.');\n        }\n        setOpen( false );\n    };\n    const dispatchExcerpts = (excerpt) => {\n        if (excerpt) {\n            const postId = select('core/editor').getCurrentPostId();\n            dispatch('core/editor').editPost({excerpt: excerpt, id: postId})\n            setNotice({message: 'Excerpt updated', status:'success'});\n        }\n        setOpen( false );\n    };\n\n    const getResponse = (param) => {\n        setPosts([]);\n        setErrors('');\n        setExcerpts([]);\n        let content = select( 'core/block-editor' ).getBlocks().filter( (i) => i.name === 'core/paragraph' || i.name === 'core/heading' );\n        let temp = '';\n        content.map((item) => {\n            temp += item.attributes.content\n        });\n        const queryParams = { content: temp };\n        if (!temp.length) {\n            setNotice({message: 'You should have at least 1 paragraph to proceed!'});\n            return;\n        }\n        if (param === 'get-excerpts') {\n            setModalHeader('Most Relevant Excerpts')\n        }\n        if (param === 'get-titles') {\n            setModalHeader('Most Relevant Headings')\n        }\n        setOpen( true );\n        setLoader( true );\n        setNotice(false);\n        fetchRequest(param, queryParams).then( ( response ) => {\n            let json_response = JSON.parse(response);\n            if (json_response['error'] && json_response['error']['message'])  throw new Error(json_response['error']['message']);\n            param === \"get-titles\" ? setPosts(json_response) : setExcerpts(json_response);\n            localStorage.setItem(`mopenai_response_${param}`, JSON.stringify(json_response));\n            setLoader(false)\n        })\n        .catch(error => {\n            setNotice({message: error.message});\n            setOpen( false );\n            setLoader( false );\n        });\n    };\n\n    return (\n        <>\n        <PluginSidebarMoreMenuItem target=\"mopenai-settings-sidebar\"> Open AI </PluginSidebarMoreMenuItem>\n        <PluginSidebar name=\"mopenai-settings-sidebar\" title=\"Open Ai\" icon=\"admin-settings\">\n            <div class=\"mopen-ai__body\">\n                <TabPanel className=\"my-tab-panel\" activeClass=\"active-tab\" onSelect={ setSelectedTab }\n                    tabs={ [\n                    {\n                        name: 'request',\n                        title: 'Request',\n                        className: 'tab-one',\n                    },\n                    {\n                        name: 'history',\n                        title: 'History',\n                        className: 'tab-two',\n                    }\n                ] }\n                >\n                    { ( tab ) => (\n                        <>\n                            {tab.name === 'request' &&\n                                <div class=\"mopen-ai__buton-group\" initialOpen={selectedTab === 'request'}>\n                                    <Button isSecondary onClick={() => getResponse('get-titles')}>Create titles</Button>\n                                    <Button isPrimary onClick={() => getResponse('get-excerpts')}>Create excerpt</Button>\n                                </div>\n                            }\n                            {tab.name === 'history' &&\n                                <HistoryList dispatchTitle={dispatchTitle} dispatchExcerpts={dispatchExcerpts} />\n                            }\n                        </>\n                    )}\n                </TabPanel>\n            </div>\n            { notice.message && (\n                <Notice\n                    status={notice.status ?? 'error'}\n                    isDismissible={true}\n                    onRemove={() => setNotice(false)}>\n                    <p>{notice.message}</p>\n                </Notice>\n            )}\n            { isOpen && (\n                <Modal title={modalHeader} onRequestClose={ closeModal }>\n                    <div class=\"components-modal__body\">\n                    { isLoader && (\n                        <div class=\"components-modal__loader\">\n                            <Spinner />\n                        </div>\n                    )}\n                    { errors && (\n                        <div class='components-modal__item'>{errors}</div>\n                    )}\n                    <List\n                        posts={posts}\n                        excerpts={excerpts}\n                        dispatchTitle={dispatchTitle}\n                        dispatchExcerpts={dispatchExcerpts}\n                        />\n                    </div>\n                </Modal>\n            )}\n        </PluginSidebar>\n    </>\n);\n};\nexport default CGPTMS_OpenAISidebar","import List from \"./List\";\nimport {useState} from \"@wordpress/element\";\nimport {TabPanel} from '@wordpress/components';\n\nconst HistoryList = (props) => {\n    const {dispatchTitle, dispatchExcerpts } = props;\n    const posts = JSON.parse(localStorage.getItem('mopenai_response_get-titles'));\n    const excerpts = JSON.parse(localStorage.getItem('mopenai_response_get-excerpts'));\n    const [selectedTab, setSelectedTab] = useState('history-title');\n    return (\n        <>\n            <TabPanel\n                className=\"history-tab-panel\"\n                activeClass=\"active-tab\"\n                onSelect={ setSelectedTab }\n                tabs={ [\n                    {\n                        name: 'history-titles',\n                        title: 'History titles',\n                        className: 'history-tab-one',\n                    },\n                    {\n                        name: 'history-excerpts',\n                        title: 'History excerpts',\n                        className: 'history-tab-two',\n                    }\n            ] }>\n                { ( tab ) => (\n                    <>\n                    { tab.name === 'history-titles' &&\n                        <List\n                            posts={posts}\n                            dispatchTitle={dispatchTitle}\n                            dispatchExcerpts={dispatchExcerpts}/>\n                    }\n                    { tab.name === 'history-excerpts' &&\n                        <List\n                            excerpts={excerpts}\n                            dispatchTitle={dispatchTitle}\n                            dispatchExcerpts={dispatchExcerpts}/>\n                    }\n                </>\n                )}\n            </TabPanel>\n        </>\n    )\n};\nexport default HistoryList;\n","const List = (props) => {\n    const { posts, excerpts, dispatchTitle, dispatchExcerpts } = props;\n\n    if (Array.isArray(posts) || Array.isArray(excerpts)) {\n        return (\n            <>\n                {posts && (\n                    posts.map((item, i) => {\n                        return (\n                            <div class='components__item'\n                                 onClick={() => dispatchTitle(item)}>{`${i + 1}) ${item}`}</div>\n                        )\n                    })\n                )}\n                {excerpts && (\n                    excerpts.map((item, i) => {\n                        return (\n                            <div class='components__item'\n                                 onClick={() => dispatchExcerpts(item)}>{`${i + 1}) ${item}`}</div>\n                        )\n                    })\n                )}\n            </>\n        )\n    } else {\n        return '';\n    }\n\n}\nexport default List","import apiFetch from \"@wordpress/api-fetch\";\nimport {addQueryArgs} from \"@wordpress/url\";\n\nconst fetchRequest  = (param, queryParams ) => {\n    return apiFetch( { path: addQueryArgs(`/mopen_ai/v1/${param}`, queryParams )} );\n};\nexport default fetchRequest\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useEffect } from '@wordpress/element'\nimport { select} from '@wordpress/data';\nimport CGPTMS_OpenAISidebar from \"./CGPTMS_OpenAISidebar\";\n\nconst CGPTMS_OpenAiRegisterPlugin = () => {\n    const { registerPlugin } = wp.plugins;\n    const { getEditedPostAttribute } = select('core/editor');\n\n    useEffect(() => {\n        if (getEditedPostAttribute('type') === 'post') {\n            registerPlugin('mopen-plugin-sidebar', {\n                render: CGPTMS_OpenAISidebar,\n            });\n        }\n    }, [getEditedPostAttribute('type')]);\n\n    return null;\n};\n\nwp.domReady(() => {\n    wp.plugins.registerPlugin('mopen-plugin', { render: CGPTMS_OpenAiRegisterPlugin });\n});"],"names":["createContext","useState","useEffect","Notice","Button","Modal","Spinner","TabPanel","select","dispatch","addQueryArgs","apiFetch","PluginSidebar","PluginSidebarMoreMenuItem","List","fetchRequest","HistoryList","CGPTMS_OpenAISidebar","_notice$status","isOpen","setOpen","notice","setNotice","message","posts","setPosts","excerpts","setExcerpts","isLoader","setLoader","modalHeader","setModalHeader","errors","setErrors","selectedTab","setSelectedTab","closeModal","dispatchTitle","title","postId","getCurrentPostId","editPost","id","status","titleBlock","getBlocks","find","block","name","updateBlockAttributes","clientId","console","log","dispatchExcerpts","excerpt","getResponse","param","content","filter","i","temp","map","item","attributes","queryParams","length","then","response","json_response","JSON","parse","Error","localStorage","setItem","stringify","catch","error","createElement","Fragment","target","icon","class","className","activeClass","onSelect","tabs","tab","initialOpen","isSecondary","onClick","isPrimary","isDismissible","onRemove","onRequestClose","props","getItem","Array","isArray","path","CGPTMS_OpenAiRegisterPlugin","registerPlugin","wp","plugins","getEditedPostAttribute","render","domReady"],"sourceRoot":""}